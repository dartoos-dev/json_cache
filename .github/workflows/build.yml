# Automates the process of testing, analyzing, checking the code format,
# building, and deploying using Github Actions.
name: Flutter CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # Runs this action when you push on master
  push:
    branches:
      - master
  # Runs this when a PR against master is created
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Clone repository
        uses: actions/checkout@v4

      # Setup the flutter environment.
      - name: Setup Flutter 
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Verify Flutter version
        run: flutter --version

      # Get flutter dependencies.
      - name: Getting dependencies 
        run: flutter pub get

      # Check for any formatting issues in the code.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed lib/ test/ example/

      - name: Analyze project source
        run: dart analyze --fatal-infos --fatal-warnings lib/ test/ example/

      - name: Run tests
        run: flutter test --no-pub --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
