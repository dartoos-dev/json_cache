# Automates the process of testing, analyzing, checking the code format,
# building, and deploying using Github Actions.
name: Flutter CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Java environment.
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          
      # Get flutter dependencies.
      - run: flutter pub get
    
      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed lib/ test/ example/
    
      # Statically analyze the Dart code for any errors.
      - run: flutter analyze --no-current-package lib/ test/ example/
    
      # Run widget tests for our flutter project.
      - run: flutter test --no-pub --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
